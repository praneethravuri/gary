TECH RESUME TAILORING GUIDE


CRITICAL PRINCIPLE - AUTHENTICITY (NON-NEGOTIABLE):
• NEVER add any skill, experience, tool, technology, or qualification not explicitly present in your master resume
• You may rephrase, emphasize, or contextualize existing content, but fabrication is strictly forbidden
• When aligning with job requirements, adapt your genuine experience using relevant keywords—do not invent capabilities
• Enhance existing resume content by understanding your master resume and incorporating relevant details

═══════════════════════════════════════════════════════════════════════════════
UNDERSTANDING ATS AND THE SCREENING PROCESS
═══════════════════════════════════════════════════════════════════════════════

How Resume Screening Works:
1. ATS scans and parses resume content
2. System scores resumes based on keyword relevance to job requirements
3. Higher-ranked resumes surface first to recruiters
4. Recruiters perform quick keyword matching (10-15 seconds per resume)
5. Resumes with notable companies/projects receive bonus consideration

ATS Optimization Strategy:
• Use job-specific keywords naturally throughout resume
• Include both full terms and abbreviations (e.g., "Amazon Web Services (AWS)")
• Avoid keyword stuffing—maintain natural readability for human reviewers
• Save as PDF with professional naming: "FirstName_LastName_Position.pdf"

═══════════════════════════════════════════════════════════════════════════════
GENERAL GUIDELINES
═══════════════════════════════════════════════════════════════════════════════

Core Principles:
✓ Use implied first-person voice—eliminate all pronouns ("I", "me", "my", "we", "our") and start bullets with action verbs
✓ Start bullet points with strong action verbs (see Action Verbs Reference)
✓ Use past tense for previous roles, present tense for current positions
✓ Spell out acronyms on first use, then use abbreviation
✓ Quantify achievements with specific metrics where measurable
✓ Maintain consistency in formatting, punctuation, capitalization, and tense
✓ Keep to one page for early-career roles; two pages acceptable for 7+ years experience
✓ Tailor every resume to the specific job description

Quality Checks:
• Proofread for grammar and spelling errors
• Check for passive voice—rewrite with action verbs
• Identify redundant phrasing and use concise alternatives
• Ensure consistent formatting across all sections
• Read aloud to catch awkward phrasing
• Verify proper capitalization (JavaScript not Javascript, MySQL not Mysql)

Humanizing AI-Generated Content:
AI-written resumes often sound robotic. If using AI assistance:
• Vary sentence lengths and structures
• Replace generic terms with industry-specific language you actually use
• Remove unnecessary adverbs and overly formal phrasing
• Add transitional phrases reflecting your natural speaking style
• Ensure content sounds conversational while maintaining professionalism
• Avoid overused AI patterns: Words like "leveraged," "spearheaded," "utilizing" are acceptable when tied to specific, meaningful outcomes, but become problematic when overused without context. Similarly, avoid corporate buzzwords like "synergy," "go-getter," "disruptive," "rockstar" that add no substance
• IMPORTANT: Heavily personalize AI-generated content—many employers use AI detection tools integrated into ATS platforms. Unedited AI content can flag resumes as inauthentic, leading to automatic rejections. Ensure content reflects your unique voice to avoid credibility issues

Relevance Over Volume:
Only include experiences, skills, and projects relevant to the target role.

Length Guidelines for Optimal Readability:
• Professional Summary: Aim for 50-80 words for brevity and impact (4-6 sentences maximum)
• Work Experience Bullets: Keep to 1-2 lines (approximately 15-30 words) for scannability, but prioritize clarity over strict word limits
• Project Descriptions: 2-4 sentences maximum, focusing on problem-solution-impact structure
• Overall Resume: 1 page for early-career roles; 2 pages acceptable for 7+ years experience

Note: These are guidelines, not rigid rules. Complex technical achievements may require additional context for proper understanding.

═══════════════════════════════════════════════════════════════════════════════
SECTION-SPECIFIC GUIDELINES
═══════════════════════════════════════════════════════════════════════════════

───────────────────────────────────────────────────────────────────────────────
1. PROFESSIONAL SUMMARY
───────────────────────────────────────────────────────────────────────────────

Purpose: Provide a compelling snapshot of your background, skills, and value proposition tailored to the specific role.

Best Practices:
✓ Aim for 50-80 words for maximum impact (4-6 sentences)
✓ Start with target job title and years of experience
✓ Align to job requirements using same keywords from job description
✓ Highlight 2-3 areas of expertise aligned with key job responsibilities
✓ Conclude with quantified achievement demonstrating relevant technical proficiency
✓ Write as cohesive, conversational paragraph (not bullet points)
✓ Reflect company culture and values in tone
✓ Do not mention the target company name in the summary

Avoid:
✗ Claiming to "specialize" in too many areas (contradicts specialization)
✗ Generic language ("results-oriented professional")
✗ Overly broad skill claims

Examples:

WEAK:
"Software Engineer with over a decade of experience, specializing in cloud-based technologies, full stack development, machine learning, big data processing, and data visualization."

STRONG:
"Software Engineer with 8+ years building scalable cloud infrastructure on AWS. Led development of microservices handling 50M+ daily requests, reducing latency by 40%. Seeking backend engineering role focused on distributed systems and performance optimization."

STRONG:
"Front-end developer with 5 years specializing in React ecosystems. Architected component libraries used by 100+ engineers across 15 teams. Optimized application performance, reducing load times by 35%."

Tailoring Tips:
• Match specialization to job focus (backend vs. frontend vs. full-stack)
• Use exact technology names from job description
• Align tone with company culture (startup vs. enterprise)
• Highlight domain expertise if relevant (fintech, healthcare, e-commerce)

───────────────────────────────────────────────────────────────────────────────
2. WORK EXPERIENCE
───────────────────────────────────────────────────────────────────────────────

Purpose: Demonstrate value through significant contributions to business goals. This is the most important section for experienced professionals.

Format: Role/Title | Company Name | Start Date - End Date

Use Google's X-Y-Z Formula:
"Accomplished [X] as measured by [Y], by doing [Z]"

Best Practices:
✓ Update most recent role's title to match target job (keep earlier titles unchanged)
✓ Keep bullets to 1-2 lines (approximately 15-30 words) for scannability—prioritize clarity over strict limits
✓ Focus on achievements, not responsibilities
✓ Use STAR method principles: clearly state action taken and quantifiable result/impact
✓ Use strong, varied action verbs—prefer variety but allow natural repetition where appropriate
✓ Include metrics where measurable (1-2 per bullet maximum); for non-quantifiable achievements, emphasize scope, complexity, and technical value
✓ Format metrics consistently: % for percentages, K/M for thousands/millions
✓ Vary bullet structures for natural flow:
  - Start with action: "Developed feature that..."
  - Start with result: "Reduced costs 30% by..."
  - Use time-based: "In 6 months, achieved..."
✓ Distribute keyword integration across roles—prioritize critical keywords in most recent position
✓ Tell a cohesive story with related accomplishments
✓ Elaborate on scale, complexity, and impact
✓ Include technologies used—they carry more weight than skills section
✓ Provide concrete examples of work
✓ Lead with summary bullet if points seem unrelated

Impact by Seniority Level:

Junior (0-2 years):
• Tasks and features completed
• Examples of good engineering practices

Mid (3-6 years):
• Medium to large features completed independently
• Cross-functional collaboration to drive features to completion

Senior (7-12 years):
• Projects/systems completed through technical leadership
• Ownership of significant projects/systems
• Identifying problems, developing solutions, driving resolution independently
• Mentoring and helping others improve

Staff+ (13+ years):
• Major initiatives led with measurable impact on teams/organizations
• Solving business problems through engineering
• Defining engineering direction and improving culture
• Recruiting, onboarding, and mentoring

Quantifying Impact:

Business Metrics:
• User counts (total/daily/monthly)
• Cost/time savings
• Revenue generated
• Reduction in complaints/support tickets
• Delivery ahead of schedule
• Goals exceeded by X%

Technical Metrics:
• Queries per second
• Pages/features built
• Codebase complexity reduced by X%
• System scalability improvements (e.g., handling X more requests per second)
• Test coverage improvement
• Dataset size (rows, GB/TB)
• Algorithm/model accuracy

Note: Avoid vanity metrics like "lines of code written"—shorter, cleaner code is often better. Focus on outcomes that demonstrate efficiency, quality, and business value.

Team Metrics:
• Number of teams/people involved
• People led or mentored
• Project adoption across teams

Examples:

WEAK:
"Built the checkout page of the e-commerce portal with a team."

STRONG:
"Led development of optimized checkout flow achieving 5% conversion rate and $10M ARR by collaborating with cross-functional team of 4 and conducting extensive A/B testing."
Technologies: React, Redux, TypeScript, Stripe API

WEAK:
"Worked on Reddit's monetization team."

STRONG:
"Added support for Apple Pay and Google Pay to Reddit Premium, resulting in 30% increase in coins revenue and reducing payment friction for 2M+ users."
Technologies: React, Redux, TypeScript, Node.js, GraphQL

Avoid:
✗ Overly generic statements ("Collaborated with team using Git")
✗ Unimportant work activities (organizing social events)
✗ Listing only responsibilities without impact
✗ Keyword pairings that don't make sense (Flask + Ruby on Rails in same project)

───────────────────────────────────────────────────────────────────────────────
3. SKILLS
───────────────────────────────────────────────────────────────────────────────

Purpose: Showcase technical proficiencies relevant to the target role.

Best Practices:
✓ List only technical/hard skills and methodologies (soft skills should be demonstrated through work experience, not listed)
✓ Select and prioritize relevant technical skills from your master resume, removing those not aligned with the target job
✓ Categorize skills for readability and proper context
✓ List only skills you can confidently defend in interviews
✓ Pay attention to proper capitalization (JavaScript, MySQL, PostgreSQL)
✓ Use industry-standard names consistently
✓ Avoid redundancy—don't list both "Python" and "Python 3.x"
✓ Order by relevance to target role
✓ DO NOT add new technical skills from job description unless genuinely implied or demonstrated by existing projects/work experience in your master resume

Recommended Skill Categories:
• Programming Languages: Python, Java, JavaScript, TypeScript, etc.
• Frameworks & Libraries: React, Node.js, Django, Spring Boot, etc.
• Databases: PostgreSQL, MongoDB, MySQL, Redis, etc.
• Cloud Platforms: AWS, Azure, Google Cloud Platform, etc.
• Developer Tools: Git, Docker, Jenkins, VS Code, Postman, etc.
• Methodologies: Agile, Scrum, Kanban, CI/CD, TDD, etc.

Note: Developer Tools and Methodologies are valuable keywords that demonstrate modern development practices. Include them in dedicated sub-categories to maintain focus on core technical skills while still providing important context.

Avoid:
✗ Skill ratings (4/5 stars in JavaScript)—if you need a rating, don't list it
✗ Too many tools in same category (React, Angular, Vue)—list what job needs
✗ Listing soft skills (Leadership, Communication, Empathy) in skills section—demonstrate these through work experience bullets instead

Examples:

Front-End Engineer:
Programming Languages: JavaScript, TypeScript, HTML, CSS
Frameworks & Libraries: React, Next.js, Redux, MobX, Tailwind CSS
Developer Tools: Git, webpack, Vite, npm, VS Code
Methodologies: Agile, Scrum, Test-Driven Development

Back-End Engineer:
Programming Languages: Python, Java, Go
Frameworks: Django, Spring Boot, Flask
Databases: PostgreSQL, MongoDB, Redis, MySQL
Cloud Platforms: AWS (EC2, S3, Lambda, RDS), Google Cloud Platform
Developer Tools: Git, Docker, Postman, Jenkins
Methodologies: Agile, CI/CD, Microservices Architecture

Full-Stack Engineer:
Programming Languages: JavaScript, Python, TypeScript
Frontend: React, Redux, HTML/CSS, Next.js
Backend: Node.js, Express, Django, FastAPI
Databases: PostgreSQL, MongoDB, Redis
Cloud Platforms: AWS, Azure
Developer Tools: Git, Docker, VS Code, Postman
Methodologies: Agile, Scrum, CI/CD, RESTful API Design

───────────────────────────────────────────────────────────────────────────────
4. PROJECTS
───────────────────────────────────────────────────────────────────────────────

Purpose: Demonstrate passion, initiative, and skills outside of work experience.

When to Include:
• Limited internship/work experience (undergrads, career switchers)
• Switching to new domain without work opportunities
• Projects have significant usage/impact
• Open source contributions to well-known projects

Best Practices:
✓ Write descriptions in narrative style (2-4 sentences, focusing on problem-solution-impact)
✓ Use problem-solution-result structure for natural flow
✓ Explain what the project does (most won't be familiar)
✓ Describe your specific role if team project
✓ Highlight purpose, relevant technologies from job description, and measurable outcomes
✓ Use projects to demonstrate competencies not fully covered in work experience
✓ Include metrics (users, impact, performance improvements)
✓ Provide links to live projects, GitHub repos, or demos
✓ Ensure GitHub repositories have polished README files
✓ Write conversationally—avoid bullet points within project descriptions

Format: Project Name, Year(s)
• Brief narrative description (2-4 sentences) covering problem, solution, and result
• Technologies: List here

Avoid:
✗ Standard school assignments with cookie-cutter solutions
✗ Projects without real usage or demonstrable skills
✗ Listing projects if work experience already fills resume

Examples:

STRONG:
PennReview, 2016 - 2021
• Built open-source web app for students to review UPenn courses, used by 20,000+ students over 4 years
• Redesigned and modernized frontend from Backbone.js to React and Redux
• Onboarded and mentored juniors to develop new features and maintain codebase
Technologies: React, Redux, TypeScript, Node.js, GraphQL, PostgreSQL, Docker

STRONG:
Internship Salary Revealed, Nov 2014
• In team of 2, built application for students to anonymously share internship salaries with rating and commenting features. Reached 10,000 users in peak month.
• Won 2nd place in course project showcase
Technologies: AngularJS, Bootstrap CSS, Ruby on Rails

───────────────────────────────────────────────────────────────────────────────
5. EDUCATION
───────────────────────────────────────────────────────────────────────────────

Format: Degree Type, Major(s) | University Name | Graduation Date

Include:
• Degree type and major(s)/minor(s)
• Graduation date (month and year)
• GPA if 3.0 or higher
• List up to 5 relevant courses per degree that directly relate to target role
• Use natural phrasing: "Relevant coursework includes..."
• Academic honors or awards

Tailoring:
• Highlight only coursework directly relevant to job requirements
• Omit unrelated coursework entirely
• Feature certifications aligned with job requirements
• Add context for specialized programs or research

Example:
Bachelor of Science, Computer Science | University of California, Berkeley | May 2022
GPA: 3.8/4.0
Relevant Coursework: Distributed Systems, Machine Learning, Database Systems, Computer Networks

═══════════════════════════════════════════════════════════════════════════════
COMMON PITFALLS TO AVOID
═══════════════════════════════════════════════════════════════════════════════

Over-Customization:
✗ Keyword stuffing (makes resume unnatural, triggers ATS spam filters)
✗ Exaggerating qualifications (tailor, don't fabricate)
✗ Inconsistencies between resume and LinkedIn/portfolio

Under-Customization:
✗ Only changing professional summary (tailor throughout entire resume)
✗ Ignoring company culture and values
✗ Missing priority keywords from job description
✗ Using identical resume for every application

Formatting Issues:
✗ Inconsistent fonts, bullet styles, spacing
✗ Mixing past and present tense
✗ Inconsistent voice (mixing pronouns or perspectives)
✗ Poor file naming (resume.pdf vs. John_Doe_Software_Engineer.pdf)

Content Problems:
✗ Focusing on duties instead of achievements
✗ Generic professional summaries ("detail-oriented professional")
✗ Not explaining employment gaps
✗ Including irrelevant personal information
✗ Listing outdated or irrelevant skills
✗ Forcing metrics on every bullet when not measurable—balance quantifiable achievements with qualitative impact (scope, complexity, technical value)
✗ Using passive voice
✗ Including irrelevant work (organizing team events)
✗ Completely excluding soft skills/leadership competencies—these should be demonstrated through work experience bullets (e.g., "Mentored 5 junior engineers," "Led cross-functional team of 12"), especially for senior, staff, or management roles

Credibility Issues:
✗ Inflating credentials or achievements
✗ Claiming expertise in incompatible technologies
✗ Listing skills you can't discuss in interviews
✗ Outdated contact information

═══════════════════════════════════════════════════════════════════════════════
THE 15-MINUTE TAILORING PROCESS
═══════════════════════════════════════════════════════════════════════════════

Maintain a comprehensive "master resume" with all experiences. For each application:

Step 1: Job Description Analysis (3 minutes)
• Highlight required and preferred skills
• Note frequently mentioned keywords
• Identify must-have vs. nice-to-have qualifications
• Understand company culture from language used

Step 2: Strategic Section Arrangement (2 minutes)
• Reorder sections based on job priorities
• Position most relevant qualifications in top third
• Ensure key information appears "above the fold"

Step 3: Experience Curation (5 minutes)
• Select 3-5 most relevant bullet points per role
• Reorder to highlight most pertinent experiences
• Incorporate job description keywords naturally
• Add/adjust quantifiable metrics
• Include technologies mentioned in job posting

Step 4: Skills Curation (3 minutes)
• Select and prioritize relevant skills from your master resume matching job requirements
• Prioritize exact keyword matches
• Remove skills not aligned with target position
• Reorder to feature most important skills first
• Ensure proper categorization (include Developer Tools and Methodologies where applicable)

Step 5: Quick Polishing (2 minutes)
• Adjust professional summary to reflect role
• Verify consistent formatting throughout
• Confirm natural keyword integration
• Check file naming and format (PDF)

═══════════════════════════════════════════════════════════════════════════════
ADDITIONAL STRATEGIES
═══════════════════════════════════════════════════════════════════════════════

Demonstrating Adaptability:
Tech evolves rapidly—employers value candidates who learn quickly. Highlight:
• Successful adoption of new technologies/tools
• Learning and implementing emerging methodologies
• Staying current with industry trends

Example: "Self-taught Kubernetes and Terraform to modernize deployment pipeline, reducing infrastructure provisioning time from 4 hours to 15 minutes"

Connecting Transferable Skills:
When pivoting roles or domains, use format: Transferable Skill + Application + Result Relevant to Target Role

Example: "Applied data analysis skills from research background to optimize database queries, reducing report generation time from 10 minutes to 30 seconds and improving customer satisfaction by 25%"

Keyword Strategy:
• Extract keywords from job description (skills, tools, technologies)
• Weave naturally into accomplishments where they authentically fit experience
• Use each critical keyword 1-3 times maximum across entire resume (avoid stuffing)
• Prioritize keyword placement by section:
  1. Professional Summary (highest priority)
  2. Most Recent Role
  3. Projects
  4. Earlier Roles
  5. Education
• Use both full terms and abbreviations
• Provide context showing how you used each skill
• Never force keywords where they don't naturally align with actual work
• Match 50-70% of job description keywords without stuffing
  - Example: If the job description lists 20 technical skills/requirements, aim to naturally incorporate 10-14 of them in your resume
  - Don't get stuck on perfectionism—focus on the most critical keywords that genuinely match your experience

Example of Natural Keyword Integration:
Weak: "Skills: React, AWS, Python"
Strong: "Developed React.js user interfaces deployed on AWS, improving client satisfaction by 40% through responsive design and 99.9% uptime"

═══════════════════════════════════════════════════════════════════════════════
ACTION VERBS REFERENCE
═══════════════════════════════════════════════════════════════════════════════

Use these power verbs to start bullet points and efficiently convey contributions:

Technical:
Architected, Assembled, Built, Constructed, Designed, Developed, Engineered, Enhanced, Implemented, Improved, Increased, Operated, Optimized, Programmed, Refactored, Standardized, Upgraded

Leadership:
Coordinated, Directed, Drove, Established, Executed, Facilitated, Headed, Led, Managed, Organized, Overhauled, Oversaw, Prioritized, Spearheaded

Creative:
Conceptualized, Created, Designed, Developed, Generated, Integrated, Planned, Prototyped, Redesigned

Research & Analysis:
Analyzed, Computed, Conducted, Diagnosed, Evaluated, Examined, Experimented, Identified, Investigated, Monitored, Tested

Communication & Collaboration:
Advised, Collaborated, Coordinated, Facilitated, Influenced, Mediated, Partnered, Presented

Organization & Planning:
Achieved, Acquired, Coordinated, Delegated, Established, Organized, Planned, Prepared, Streamlined

Mentorship & Teaching:
Coached, Mentored, Onboarded, Taught, Trained, Guided

═══════════════════════════════════════════════════════════════════════════════
FINAL CHECKLIST
═══════════════════════════════════════════════════════════════════════════════

Before submitting:
☐ Tailored to specific job description
☐ Keywords naturally integrated throughout
☐ Accomplishments quantified where measurable; scope/complexity emphasized where not
☐ Consistent tense (past for previous roles, present for current)
☐ No pronouns (I, me, we, our)—using implied first-person voice
☐ Strong action verbs start each bullet point
☐ Proper capitalization of technologies
☐ No spelling or grammar errors
☐ Professional file naming: FirstName_LastName_Position.pdf
☐ One page (or two if 7+ years experience)
☐ Contact information current and professional
☐ LinkedIn profile aligns with resume
☐ Read aloud to catch awkward phrasing
☐ Leadership/soft skills demonstrated through work experience (not listed in skills section)
☐ All claims defensible in interviews

═══════════════════════════════════════════════════════════════════════════════
RESOURCES
═══════════════════════════════════════════════════════════════════════════════

Additional Learning:
• Staff Engineering: https://staffeng.com
• Tech Resume Examples: https://cs.unc.edu/student-life/career/technical-resumes/
• Resume Red Flags: https://blog.theinterviewguys.com/resume-red-flags/
• ATS Optimization: https://www.nucamp.co/blog/coding-bootcamp-job-hunting-tailoring-your-resume-for-different-tech-roles

Remember: Your resume is a living document. Update it after each achievement, continuously refine it, and always tailor it to the specific opportunity you're pursuing.