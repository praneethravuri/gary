job_analysis_task:
  description: >
    Analyze the job description and extract all skills, requirements, and company signals for ATS optimization.

    **Extract and categorize:**

    Skills - Separate into technical (programming languages, tools, platforms, certifications), soft (communication, problem-solving),
    management (leadership, stakeholder management, strategic planning), and bonus/nice-to-have qualifications.
    Use exact terminology including abbreviations and version numbers.

    Responsibilities & Qualifications - Extract complete phrases covering duties, requirements, and qualifications.
    Strip buzzwords like "rockstar," "synergy," "disruptive" but preserve core meaning and industry-specific terminology.
    Include quantifiable requirements (years of experience, education). Flag repeated or emphasized phrases as high priority.

    Company Signals - Identify tone/priorities (fast-paced, collaborative, data-driven, innovative) and cultural values
    (diversity, growth mindset, work-life balance, mission alignment). Exclude generic marketing language.

    **Quality standards:**
    - Comprehensive: capture every substantive skill and requirement
    - Precise: use exact terminology from job description
    - Deduplicated: each item appears once across all categories
    - Actionable: focus on concrete, verifiable qualifications over vague attributes
        
        
    Job Description:
    ```
    {job_description}
    ```

  expected_output: >
    Complete JobAnalysis object with categorized extraction. No preamble or explanatory text.

resume_tailoring_task:
  description: >
    **OBJECTIVE:** Transform the master resume into an ATS-optimized, culturally-aligned document that
    authentically matches the target role. Use the rich JobAnalysis report to guide ALL tailoring decisions.

    **STEP 1 - DEEP ANALYSIS OF JOB ANALYSIS REPORT:**
    Extract and prioritize keywords from ALL JobAnalysis fields, noting their purpose:
    - `skills.technical` (must-have qualifications for Skills section)
    - `skills.soft` (to be DEMONSTRATED through experience bullets, NOT listed)
    - `skills.management` (to be SHOWN through leadership examples, NOT listed)
    - `skills.bonus` (nice-to-have differentiators to include if possessed)
    - `responsibilities_and_qualifications` (CRITICAL—repeated phrases are highest priority)
    - `tone_and_priorities` (adapt writing style to match company character)
    - `culture_and_values` (subtly reflect these in narrative)

    Map master resume experiences to these requirements and plan keyword distribution across sections:
    Summary (strategic placement) > Recent role > Projects > Earlier roles > Education.
    Target 50-70% natural keyword coverage from JobAnalysis.

    **STEP 2 - CRAFT PROFESSIONAL SUMMARY (50-80 words, 4-6 sentences):**
    Structure: [Target job title + years of experience] → [2-3 expertise areas matching key responsibilities] → [quantified achievement]

    - Calculate years from work history
    - Highlight expertise areas matching high-priority items from `responsibilities_and_qualifications`
    - Naturally weave 3-5 high-priority keywords (especially repeated phrases)
    - Conclude with quantified achievement demonstrating relevant technical proficiency
    - **REFLECT COMPANY CHARACTER:** Adapt tone to `tone_and_priorities` (e.g., dynamic language for "fast-paced," metrics for "data-driven," teamwork for "collaborative")
    - **SUBTLE CULTURAL ALIGNMENT:** If authentic, incorporate 1-2 concepts from `culture_and_values` (e.g., mention innovation if valued)
    - Write as cohesive, conversational paragraph (NOT bullet points, NO company names)

    Example: "Software Engineer with 8+ years building scalable cloud infrastructure on AWS. Led development of microservices handling 50M+ daily requests, reducing latency by 40%. Passionate about rapid iteration and data-driven optimization."

    **STEP 3 - TAILOR WORK EXPERIENCE:**

    **Role Title Handling (CRITICAL AUTHENTICITY RULE):**
    - If most recent title is functionally similar but uses different terminology (e.g., "Software Developer" vs. "Software Engineer"), align it to target title
    - NEVER change seniority level (e.g., "Engineer" → "Senior Engineer") or core function (e.g., "Data Analyst" → "Data Scientist")
    - Keep ALL earlier titles unchanged
    - If in doubt, keep original title and use bullets to emphasize relevant responsibilities

    **Bullet Point Crafting:**
    - Select 5 most relevant accomplishments per role from master resume
    - Rewrite using STAR method: Action + Quantifiable Result/Impact
    - Keep to 1-2 lines (15-30 words) for scannability, but prioritize clarity—allow slight extensions for complex achievements
    - **DEMONSTRATE SOFT & MANAGEMENT SKILLS** through concrete examples:
      * For collaboration: "Partnered with design and product teams of 12 to..."
      * For mentorship: "Mentored 3 junior engineers, improving team code quality by 25%"
      * For stakeholder management: "Presented technical roadmap to executive leadership"
    - Use strong, varied action verbs: Technical (Architected, Built, Optimized); Leadership (Led, Managed, Mentored); Research (Analyzed, Investigated)
    - Use "leveraged" or "spearheaded" ONLY sparingly and tied to specific measurable outcomes
    - Vary sentence structures (action-first, result-first, time-based) for natural flow
    - Include 1-2 metrics per bullet where measurable; emphasize scope/complexity if not quantifiable—don't force metrics
    - Format metrics consistently (%, K, M)
    - Integrate keywords from `skills.technical` and repeated phrases from `responsibilities_and_qualifications` naturally where they authentically fit

    **STEP 4 - CURATE SKILLS:**
    - Filter master resume skills to match `skills.technical` from JobAnalysis—remove unaligned items
    - Organize into clear categories: Programming Languages, Frameworks, Databases, Cloud Platforms, Developer Tools, Methodologies
    - List ONLY technical/hard skills (soft/management skills are demonstrated through experience bullets, NOT listed here)
    - Use exact industry-standard names (JavaScript not Javascript, MySQL not Mysql)
    - Avoid redundancy (don't list both "Python" and "Python 3.x")
    - **BONUS SKILLS STRATEGY:** Review `skills.bonus` from JobAnalysis—if possessed, include these differentiators prominently in relevant categories
    - **IMPLIED SKILLS RULE:** Add skills not in master resume ONLY if directly implied by existing projects/work
      * ACCEPTABLE: Add "Python" if project used "Django"
      * NOT ACCEPTABLE: Don't infer "Distributed Systems" from basic "AWS" usage

    **STEP 5 - REFINE PROJECTS:**
    - Write 2-4 sentence narratives using problem-solution-result structure
    - Highlight technologies matching `skills.technical` from JobAnalysis
    - Include measurable outcomes where available
    - **USE PROJECTS TO SHOWCASE BONUS QUALIFICATIONS:** If `skills.bonus` contains technologies/skills not covered in work experience, feature them here
    - Use projects to fill competency gaps not fully demonstrated in work experience
    - Write conversationally with natural flow

    **STEP 6 - UPDATE EDUCATION:**
    - List up to 5 relevant courses per degree directly relating to `skills.technical` or `responsibilities_and_qualifications`
    - Use natural phrasing: "Relevant coursework includes..."
    - Omit unrelated coursework

    **STEP 7 - FINAL VALIDATION:**
    Verify the resume fully aligns with ALL aspects of the JobAnalysis report:
    - High-priority keywords (especially repeated phrases) naturally integrated
    - Technical, soft, management, and bonus skills covered where applicable
    - Tone and culture authentically reflected
    - No fabrication or keyword stuffing (max 1-3 uses per critical keyword)
    - Natural readability with varied sentence structures
    - No pronouns (I, me, we), no passive voice, no AI patterns
    - Consistent tense (past for previous roles, present for current), capitalization, and metric formatting

    **CRITICAL AUTHENTICITY & QUALITY RULES:**
    - NEVER fabricate or add anything not in master resume (skills, experiences, titles)
    - NEVER change seniority or core function in job titles
    - NEVER keyword stuff—integrate naturally across sections
    - NEVER use robotic patterns (avoid overused phrases without context like "synergy," excessive "leveraged")
    - DO rephrase and strategically emphasize existing content authentically
    - DO vary sentence structures and lengths for conversational professionalism
    - DO integrate keywords naturally, targeting 50-70% coverage
    - DO demonstrate soft/management skills through examples, not lists

    **Master Resume:**
    ```
    {master_resume}
    ```

  expected_output: >
    A single, clean JSON object that strictly adheres to the `ResumeContent` Pydantic model.
    Do not include any introductory text, explanations, or any content outside of the final JSON object.

resume_validation_task:
  description: >
    Validate the tailored resume against the job analysis to ensure quality, keyword integration,
    and readiness for document generation. Use the context from previous tasks (job analysis and
    tailored resume) to perform comprehensive analysis and provide actionable feedback.

    **Validation Criteria:**

    **1. Keyword Integration Analysis:**
    - Count total keywords from job analysis (technical skills, soft skills, management skills, and key terms)
    - Identify which keywords appear in the resume
    - Calculate integration rate (percentage of keywords included)
    - Classify keywords as naturally integrated vs. forced/awkwardly placed
    - Identify missing critical keywords that should be added
    - Check for keyword stuffing (same keyword repeated excessively)

    **2. Phrase Usage Analysis:**
    - Verify that responsibilities and qualifications from job analysis are reflected in resume
    - Check if industry-specific terminology is used correctly and in proper context
    - Identify phrases that sound unnatural or AI-generated ("leveraged," "spearheaded," "synergy")
    - Note important phrases from job description that should be incorporated

    **3. ATS Compatibility Check:**
    - Evaluate keyword density and distribution across resume sections
    - Verify technical skills are explicitly stated (not just implied)
    - Check if quantifiable achievements are present
    - Assess overall structure and formatting compatibility
    - Score from 0-100 based on ATS optimization

    **4. Human Readability Assessment:**
    - Evaluate natural language flow and sentence variety
    - Identify robotic patterns or AI-generated phrases
    - Check for authentic voice and third-person consistency
    - Assess if experience sounds genuine vs. fabricated
    - Score from 0-100 based on human readability

    **5. Quality Feedback:**
    - List 3-5 specific strengths of the resume
    - List 3-5 weaknesses or areas for improvement
    - Provide 3-5 actionable suggestions for enhancement
    - Calculate overall score (weighted: 40% keyword integration, 30% ATS score, 30% readability)

    **6. Pass/Fail Determination:**
    - Resume passes if: overall score >= 75, ATS score >= 70, readability score >= 70, integration rate >= 60%
    - Resume is ready for generation if: passed_validation = True AND no critical keywords missing

    **Note:** Do NOT use the document generation tool. The validation report will be used by the main
    workflow to generate the document. Focus only on validation and providing the comprehensive report.

  expected_output: >
    A comprehensive ResumeValidationReport JSON object that includes all analysis, scores, feedback,
    and pass/fail determination based on the job analysis and tailored resume from previous tasks.
    Do not include any preamble or extra text outside of the JSON object.
