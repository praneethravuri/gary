job_analysis_task:
  description: >
    Analyze the provided job description and extract key information while focusing on
    ATS-compatible keywords and filtering out corporate jargon.

    **Key Instructions:**
    - Extract concrete skills, tools, technologies, and qualifications
    - Ignore buzzwords like "rockstar," "ninja," "synergy," "disruptive," "game-changer"
    - Focus on specific technical skills, programming languages, tools, certifications
    - Capture actual responsibilities and duties, not generic corporate speak
    - Identify genuinely repeated or emphasized terms that indicate importance
    - Extract company mission/values that are substantive, not just marketing fluff
    - Standardize the job title to its core functional role. Remove all seniority levels, qualifiers, and program-specific tags.
    - Strip out all terms like "1", "2", "I", "II", "Associate", "Senior" and tags like "Early Careers", "New Grad", etc from the job title.
    - Standardize the location to the format 'City, ST, USA'.

    **What to Extract:**
    1. Company name, job title, location, job ID
    2. Skills categorized as technical/hard, soft/interpersonal, management/leadership, bonus/nice-to-have
    3. Specific tools and technologies mentioned
    4. Actual responsibilities and qualifications (verbatim from job description)
    5. Key phrases that are repeated or emphasized
    6. Company culture keywords that describe real values/mission

    Job Description:
    ```
    {job_description}
    ```

  expected_output: >
    A clean JSON object following the `JobAnalysis` Pydantic model. Focus on extracting
    concrete, ATS-friendly keywords while filtering out meaningless corporate jargon.
    Do not include any preamble or extra text outside of the JSON object.